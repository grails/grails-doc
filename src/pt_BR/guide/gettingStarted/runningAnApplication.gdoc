{hidden}
Grails applications can be run with the built in Tomcat server using the [run-app|commandLine] command which will load a server on port 8080 by default:

{code}
grails run-app
{code}

You can specify a different port by using the @server.port@ argument:

{code}
grails -Dserver.port=8090 run-app
{code}

Note that it is better to start up the application in interactive mode since a container restart is much quicker:

{code}
$ grails
grails> run-app
| Server running. Browse to http://localhost:8080/helloworld
| Application loaded in interactive mode. Type 'stop-app' to shutdown.
| Downloading: plugins-list.xml
grails> stop-app
| Stopping Grails server
grails> run-app
| Server running. Browse to http://localhost:8080/helloworld
| Application loaded in interactive mode. Type 'stop-app' to shutdown.
| Downloading: plugins-list.xml
{code}

More information on the [run-app|commandLine] command can be found in the reference guide.
{hidden}

Aplicações Grails podem rodar com um servidor Tomcat integrado usando o comando [run-app|commandLine], em que vai carregar um servidor na porta 8080 por padrão:

{code}
grails run-app
{code}

Você pode passar uma porta diferente usando o argumento @server.port@:

{code}
grails -Dserver.port=8090 run-app
{code}

Observe que é melhor inicializar a aplicação no modo interativo já que reiniciar um container é muito mais rápido:

{code}
$ grails
grails> run-app
| Server running. Browse to http://localhost:8080/helloworld
| Application loaded in interactive mode. Type 'stop-app' to shutdown.
| Downloading: plugins-list.xml
grails> stop-app
| Stopping Grails server
grails> run-app
| Server running. Browse to http://localhost:8080/helloworld
| Application loaded in interactive mode. Type 'stop-app' to shutdown.
| Downloading: plugins-list.xml
{code}

Maiores informações sobre o comando [run-app|commandLine] podem ser achadas neste guia.
