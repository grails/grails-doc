{hidden}
As well as [association|guide:gormAssociation], Grails supports the notion of composition. In this case instead of mapping classes onto separate tables a class can be "embedded" within the current table. For example:
{hidden}
Además de la [asociación|guide:gormAssociation], Grails también tiene soporte para la composición. En este caso, en lugar de mapear las clases en tablas separadas una clase puede ser "integrada" dentro de la tabla actual. Por ejemplo: 

{code}
class Person {
    Address homeAddress
    Address workAddress
    static embedded = ['homeAddress', 'workAddress']
}

class Address {
    String number
    String code
}
{code}

{hidden}
The resulting mapping would looking like this:
{hidden}
El mapeo resultante tendría el siguiente aspecto:

!5.2.2-composition.jpg!

{note}
{hidden}
If you define the @Address@ class in a separate Groovy file in the @grails-app/domain@ directory you will also get an @address@ table. If you don't want this to happen use Groovy's ability to define múltiple classes per file and include the @Address@ class below the @Person@ class in the @grails-app/domain/Person.groovy@ file
{hidden}
Si la clase @Address@ es definida por separado en un archivo Groovy dentro del directorio @grails-app/domain@, la tabla @address@ también sera generada. Si no desea que esto suceda, utilice la capacidad de Groovy para definir múltiples clases por archivo e incluya la clase @Address@ debajo de la clase @Person@ en el archivo @grails-app/domain/Person.groovy@.
{note}
