{hidden}
If you are having trouble getting a dependency to resolve you can enable more verbose debugging from the underlying engine using the @log@ method:

{code}
// log level of the Aether or Ivy resolver, either 'error', 'warn',
// 'info', 'debug' or 'verbose'
log "warn"
{code}

A common issue is that the checksums for a dependency don't match the associated JAR file, and so Ivy rejects the dependency. This helps ensure that the dependencies are valid. But for a variety of reasons some dependencies simply don't have valid checksums in the repositories, even if they are valid JARs. To get round this, you can disable Ivy's dependency checks like so:

{code}
grails.project.dependency.resolution = {
    ...
    log "warn"
    checksums false
    ...
}
{code}

This is a global setting, so only use it if you have to.

{hidden}
如果你在对依赖解析中遇到问题的话，你可以使用@log@方法对自底层引擎启用更详尽的调试模式：

{code}
// Aether或Ivy解析器的日志级别，取值可以为'error', 'warn',
// 'info', 'debug' or 'verbose'
log "warn"
{code}

一个常见的问题是依赖的校验和与相关的JAR文件不匹配，所以Ivy拒绝这个依赖。这帮助确保依赖是有效的。但是由于各种各样的原因，一些依赖在仓库中就是没有有效的校验和，即使它们是有效的JAR文件。为了解决这个问题，你可以禁用Ivy的依赖检查，就像这样：

{code}
grails.project.dependency.resolution = {
    ...
    log "warn"
    checksums false
    ...
}
{code}

这是个全局设置，因此仅在必要时使用。
