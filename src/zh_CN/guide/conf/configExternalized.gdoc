有些发布的产品可以修改配置文件来改变请求行为，而不需要重新重建应用。为了达到这个功能，配置文件可以扩展化。下面的方式可以指定 Grails 改变配置 @grails.config.locations@ 的 @Config.groovy@ :

{code:java}
grails.config.locations = [
    "classpath:${appName}-config.properties",
    "classpath:${appName}-config.groovy",
    "file:${userHome}/.grails/${appName}-config.properties",
    "file:${userHome}/.grails/${appName}-config.groovy" ]
{code}

上面的例子，我们可以调用不同的 classpath 和 本地 @USER_HOME@ 目录中的配置文件(包括 Java 属性文件和 "ConfigSlurper":http://groovy.codehaus.org/ConfigSlurper 设置)

这样就可以按照配置脚本进行调用参数

{code:java}
grails.config.locations = [com.my.app.MyConfig]
{code}

This can be useful in situations where the config is either coming from a plugin or some other part of your application. A typical use for this is re-using configuration provided by plugins across multiple applications.

Ultimately all configuration files get merged into the @config@ property of the [GrailsApplication|api:org.codehaus.groovy.grails.commons.GrailsApplication] object and are hence obtainable from there.

Values that have the same name as previously defined values will overwrite the existing values, and the pointed to configuration sources are loaded in the order in which they are defined.

h4. 默认设置

The configuration values contained in the locations described by the @grails.config.locations@ property will *override* any values defined in your application @Config.groovy@ file which may not be what you want. You may want to have a set of _default_ values be be loaded that can be overridden in either your application's @Config.groovy@ file or in a named config location. For this you can use the @grails.config.defaults.locations@ property.

This property supports the same values as the @grails.config.locations@ property (i.e. paths to config scripts, property files or classes), but the config described by @grails.config.defaults.locations@ will be loaded _before_ all other values and can therefore be overridden. Some plugins use this mechanism to supply one or more sets of default configuration that you can choose to include in your application config.

{note}
Grails 支持覆盖参数 "Spring":http://www.springframework.org 参阅 [Grails and Spring|guide:spring]
{note}
