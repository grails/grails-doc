{hidden}
Grails provides the following GORM configuration options:

* @grails.gorm.failOnError@  - If set to @true@, causes the @save()@ method on domain classes to throw a @grails.validation.ValidationException@ if [validation|guide:validation] fails during a save.  This option may also be assigned a list of Strings representing package names.  If the value is a list of Strings then the failOnError behavior will only be applied to domain classes in those packages (including sub-packages).  See the [save|domainClasses] method docs for more information.

For example, to enable failOnError for all domain classes:
{code:java}
grails.gorm.failOnError=true
{code}

and to enable failOnError for domain classes by package:
{code:java}
grails.gorm.failOnError = ['com.companyname.somepackage',
                           'com.companyname.someotherpackage']
{code}
* @grails.gorm.autoFlush@ = If set to @true@, causes the [merge|domainClasses], [save|domainClasses] and [delete|domainClasses] methods to flush the session, replacing the need to explicitly flush using @save(flush: true)@.
{hidden}

Grails提供了如下的GORM配置选项：

* @grails.gorm.failOnError@  - 如果设置为 @true@ ，当保存领域类实体时[验证|guide:validation]失败的话，会导致领域类的 @save()@ 方法抛出一个@grails.validation.ValidationException@异常。这个选项也可以赋值为代表包名的字符串的列表。如果选项值是字符串列表的话，那么failOnError仅仅应用于这些包（包括子包）中的领域类。查看[save|domainClasses]方法的文档了解更多信息。

例如，要对所有的领域类启用failOnError：
{code:java}
grails.gorm.failOnError=true
{code}

要对特定包中的领域类启用failOnError：
{code:java}
grails.gorm.failOnError = ['com.companyname.somepackage',
                           'com.companyname.someotherpackage']
{code}
* @grails.gorm.autoFlush@ = 如果设置为 @true@，将导致[merge|domainClasses]、[save|domainClasses]和[delete|domainClasses]方法刷新会话，代替了使用@save(flush: true)@显示刷新的需求。
