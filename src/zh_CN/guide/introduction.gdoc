{hidden}
Java web development as it stands today is dramatically more complicated than it needs to be. Most modern web frameworks in the Java space are over complicated and don't embrace the Don't Repeat Yourself (DRY) principles.

Dynamic frameworks like Rails, Django and TurboGears helped pave the way to a more modern way of thinking about web applications. Grails builds on these concepts and dramatically reduces the complexity of building web applications on the Java platform. What makes it different, however, is that it does so by building on already established Java technologies like Spring and Hibernate.

Grails is a full stack framework and attempts to solve as many pieces of the web development puzzle through the core technology and its associated plugins. Included out the box are things like:

* An easy to use Object Relational Mapping (ORM) layer built on [Hibernate|http://www.hibernate.org]
* An expressive view technology called Groovy Server Pages (GSP)
* A controller layer built on "Spring":http://www.springframework.org MVC
* A command line scripting environment built on the Groovy-powered "Gant":http://groovy.codehaus.org/Gant
* An embedded "Tomcat":http://tomcat.apache.org container which is configured for on the fly reloading
* Dependency injection with the inbuilt Spring container
* Support for internationalization (i18n) built on Spring's core MessageSource concept
* A transactional service layer built on Spring's transaction abstraction

All of these are made easy to use through the power of the "Groovy":http://groovy.codehaus.org language and the extensive use of Domain Specific Languages (DSLs)

This documentation will take you through getting started with Grails and building web applications with the Grails framework.
{hidden}
时至今日，Java Web开发正在急剧地变得更加复杂，其实Java Web开发并不需要如此复杂。Java领域中大多数的现代Web开发框架过于复杂，而且它们没有拥抱Don't Repeat Yourself（DRY）设计原则。

Rails，Django和TurboGears等动态框架为采用一种更加现代化的Web应用开发思维方法铺平了道路。Grails构建于这些理念之上，显著降低了Java平台上构建Web应用程序的复杂性。不过Grails的不同之处是构建在Spring和Hibernate等已有的Java技术之上的。

Grails是一个整栈式开发框架，借助于核心技术及其相关的插件解决Web开发中方方面面的问题，其中包括：

* 易用的基于[Hibernate|http://www.hibernate.org]的对象-关系映射(ORM)层
* 称为Groovy Server Pages (GSP)的表现力丰富的视图技术
* 基于"Spring":http://www.springframework.org MVC的控制器层
* 构建于Groovy提供动力的"Gant":http://groovy.codehaus.org/Gant 之上的命令行脚本运行环境
* 内置"Tomcat":http://tomcat.apache.org 容器，已经配置成自动重新加载
* 利用内置的Spring 容器实现依赖注入
* 基于Spring中MessageSource的核心概念，提供了对国际化（i18n）的支持
* 基于Spring事务抽象概念，实现事务性的服务层

借助于功能强大的"Groovy":http://groovy.codehaus.org 编程语言和领域特定语言的广泛应用，上述特性变得非常易用。

本文档将带领你熟悉Grails并使用Grails框架构建Web应用程序。
