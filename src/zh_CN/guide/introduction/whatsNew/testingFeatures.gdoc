{hidden}
h4. New Unit Testing Console Output

Test output from the test-app command has been improved:

!test-output.png!

h4. New Unit Testing API

There is a new unit testing API based on mixins that supports JUnit 3, 4 and Spock style tests (with Spock 0.6 and above). Example:

{code:java}
import grails.test.mixin.TestFor

@TestFor(SimpleController)
class SimpleControllerTests  {
    void testIndex() {
        controller.home()

        assert view == "/simple/homePage"
        assert model.title == "Hello World"
    }
}
{code}

The [documentation on testing|guide:testing] has also been re-written around this new framework.

h4. Unit Testing GORM

A new in-memory GORM implementation is present that supports many more features of the GORM API making unit testing of criteria queries, named queries and other previously unsupported methods possible.

h4. Faster Unit Testing with Interactive Mode

The new interactive mode (activated by typing 'grails') greatly improves the execution time of running unit and integration tests.

h4. Unit Test Scaffolding

A unit test is now generated for scaffolded controllers
{hidden}
h4. 新的单元测试控制台输出

运行@test-app@命令的测试输出已经得到改进：

!test-output.png!

h4. 新的单元测试API

已经有了基于mixins的支持JUnit 3, 4和Spock风格(Spock 0.6以上)的新单元测试API，例如：

{code:java}
import grails.test.mixin.TestFor

@TestFor(SimpleController)
class SimpleControllerTests  {
    void testIndex() {
        controller.home()

        assert view == "/simple/homePage"
        assert model.title == "Hello World"
    }
}
{code}

[关于测试的文档|guide:testing]已经基于新的框架进行了重新编写。

h4. 对GORM单元测试

一个新的基于内存的GORM实现支持GORM API中许许多多的功能，使得对GORM在标准查询、命名查询以及以前并未支持的方法进行单元测试成为可能。

h4. 交互模式下更快的单元测试

新的交互模式（通过输入'grails'命令激活）极大地改进了单元测试和集成测试的执行时间。

h4. 脚手架（Scaffolding）的单元测试

脚手架化的控制器现在也会自动生成一个单元测试。
