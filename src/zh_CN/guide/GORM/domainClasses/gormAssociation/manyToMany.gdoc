Grails在两个类中使用 @hasMany@ 支持多对多关联，在持有端使用@belongsTo@关联。
{code}
class Book {
    static belongsTo = Author
    static hasMany = [authors:Author]
    String title
}
{code}

{code}
class Author {
    static hasMany = [books:Book]
    String name
}
{code}

Grails在数据库层面上使用join表来实现多对多。在持有端，这里是@Author@，具有关联责任且拥有级联保存能力。

下面例子说明了如何实现效果和级联保存(cascade saves)：

{code}
new Author(name:"Stephen King")
        .addToBooks(new Book(title:"The Stand"))
        .addToBooks(new Book(title:"The Shining"))
        .save()
{code}

下面将只保存 @Book@ 而不是 _@Author@_

{code}
new Book(name:"Groovy in Action")
        .addToAuthors(new Author(name:"Dierk Koenig"))
        .addToAuthors(new Author(name:"Guillaume Laforge"))
        .save()
{code}

就像Hibernate中，只有一边的many-to-many的可以用于管理关系的责任。

{warning}
Grails的脚手架[Scaffolding|guide:scaffolding]特征当前*不能*支持多对多关联，你必须手动自己写相关代码。
{warning}
