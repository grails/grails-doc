Grails applications are deployed as Web Application Archives (WAR files), and Grails includes the [war|commandLine] command for performing this task:

{code}
grails war
{code}

This will produce a WAR file under the @target@ directory which can then be deployed as per your container's instructions.

Unlike most scripts which default to the @development@ environment unless overridden, the @war@ command runs in the @production@ environment by default. You can override this like any script by specifying the environment name, for example:

{code}
grails dev war
{code}

{warning}
NEVER deploy Grails using the [run-app|commandLine] command as this command sets Grails up for auto-reloading at runtime which has a severe performance and scalability implications
{warning}

When deploying Grails you should always run your containers JVM with the @-server@ option and with sufficient memory allocation. A good set of VM flags would be:

{code}
-server -Xmx512M -XX:MaxPermSize=256m
{code}
