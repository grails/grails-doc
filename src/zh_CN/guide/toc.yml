introduction:
  title: 介绍
  whatsNew24: Grails 2.4有哪些新特性?
  whatsNew23: Grails 2.3有哪些新特性?
  whatsNew22: Grails 2.2有哪些新特性?
  whatsNew21: Grails 2.1有哪些新特性?
  whatsNew:
    title: Grails 2.0有哪些新特性？
    developmentEnvironmentFeatures: 开发环境特性
    coreFeatures: 核心特性
    webFeatures: Web层特性
    persistenceFeatures: 持久化特性
    testingFeatures: 测试特性
gettingStarted:
  title: 入门
  requirements: 安装必备条件
  downloadingAndInstalling: 下载并安装
  creatingAnApplication: 创建应用
  aHelloWorldExample: 一个简单的Hello World例子
  usingInteractiveMode: 使用交互模式
  ide: 使用集成开发环境
  conventionOverConfiguration: 约定优于配置
  runningAnApplication: 运行应用
  testingAnApplication: 测试应用
  deployingAnApplication: 部署应用
  supportedJavaEEContainers: 所支持的J2EE容器
  creatingArtefacts: 创建Artefacts
  generatingAnApplication: 生成一个应用
upgradingFrom22: 从Grails 升级到2.2
upgradingFrom23: 从Grails 升级到2.3
conf:
  title: 配置
  config:
    title: 基本配置
    builtInOptions: 内置配置项
    logging: 日志
    configGORM: 对象关系映射框架GORM
  environments: 环境
  dataSource:
    title: 数据源
    dataSourcesAndEnvironments: 数据源与环境
    JNDIDataSources: JNDI数据源
    automaticDatabaseMigration: 动数据库移植
    transactionAwareDataSourceProxy: 监控事务的数据源代理
    databaseConsole: 数据库控制台
    multipleDatasources: 多种数据源
  configExternalized: 外部配置
  versioning: 版本控制
  docengine: 项目文档
  dependencyResolution:
    title: 解决依赖
    configurationsAndDependencies: 配置依赖关系
    dependencyRepositories: 依赖仓库
    debuggingResolution: 调试依赖
    inheritedDependencies: 继承依赖
    providingDefaultDependencies: 提供缺省依赖
    changingDependencies: 快照与持续变更的依赖
    dependencyReports: 依赖报告
    pluginJARDependencies: 插件jar包依赖
    mavenIntegration: 集成Maven
    mavendeploy: 部署到Maven仓库
    pluginDependencies: 插件依赖
    dependencyResolutionCaching: 依赖结果缓存
commandLine:
  title: 命令行
  interactiveMode: 交互模式
  forkedMode: 混合执行
  creatingGantScripts: 创建Gant脚本
  reusingGrailsScripts: 重用Grails脚本
  events: 钩子捕获事件
  buildCustomising: 自定义构建
  antAndMaven: Ant和Maven
  wrapper: Grails Wrapper
GORM:
  title: 对象关系映射(GORM)
  quickStartGuide:
    title: 快速开始指南
    basicCRUD: 基本的增删改查CRUD
  domainClasses:
    title: GORM中进行Domain建模
    gormAssociation:
      title: GORM中的关联
      manyToOneAndOneToOne: 多对一与一对一
      oneToMany: 一对多
      manyToMany: 多对多
      basicCollectionTypes: 基本的集合类型
    gormComposition: GORM中的组合
    inheritanceInGORM: GORM中的继承
    sets,ListsAndMaps: Sets, Lists 与 Maps
  persistenceBasics:
    title: 持久化基础
    savingAndUpdating: 保存与更新
    deletingObjects: 删除对象
    cascades: 级联更新和删除
    fetching: 立即加载和延迟加载
    locking: 悲观锁和乐观锁
    modificationChecking: 修改变动检查
  querying:
    title: GORM查询
    finders: 动态查询器
    whereQueries: Where查询
    criteria: 条件查询
    detachedCriteria: 游离条件查询
    hql: Hibernate查询语言(HQL)
  advancedGORMFeatures:
    title: 高级GORM特性
    eventsAutoTimestamping: 事件和自动实现时间戳
    ormdsl:
      title: 自定义ORM映射
      tableAndColumnNames: 表名和列名
      caching: 缓存策略
      inheritanceStrategies: 继承策略
      identity: 自定义数据库标识
      compositePrimaryKeys: 组合主键
      databaseIndices: 数据库索引
      optimisticLockingAndVersioning: 乐观锁和版本定义
      fetchingDSL: 立即加载和延迟加载
      customCascadeBehaviour: 自定义级联行为
      customHibernateTypes: 自定义Hibernate的类型
      derivedProperties: 派生属性
      customNamingStrategy: 自定义命名策略
    defaultSortOrder: 缺省排序
  programmaticTransactions: 事务编程
  gormConstraints: GORM与约束
theWebLayer:
  title: Web层
  controllers:
    title: 控制器(Controllers)
    understandingControllersAndActions: 理解控制器(Controller)与操作(Action)
    controllersAndScopes: 控制器(Controller) 与作用域
    modelsAndViews: Models(模型)与Views(视图)
    redirectsAndChaining: 重定向与链接
    interceptors: Controller(控制器)拦截器
    dataBinding: 数据绑定
    xmlAndJSON: XML与JSON响应
    moreOnJSONBuilder: 关于JSONBuilder
    uploadingFiles: 文件上传
    commandObjects: 命令对象
    formtokens: 处理重复的表单提交
    typeConverters: 简单类型转换器
    controllerExceptionHandling: 声明式控制器异常处理
  gsp:
    title: Groovy服务器页面(GSP)
    GSPBasics:
      title: GSP基础
      variablesAndScopes: 变量与作用域
      logicAndIteration: 逻辑和迭代
      pageDirectives: 页面指令
      expressions: 表达式
    tags:
      title: GSP标签
      tagVariablesAndScopes: 变量与作用域
      tagLogicAndIteration: 逻辑和迭代
      searchAndFiltering: 搜索和过滤
      linksAndResources: 链接和资源
      formsAndFields: 表单和字段
      tagsAsMethodCalls: 标签作为方法调用
    viewsAndTemplates: 视图(View)与模板(Templates)
    layouts: 使用Sitemesh布局
    resources:
      title: 静态资源
      includingResourcesUsingTheResourceTags: 使用资源标签包含资源
      otherResourceTags: 其它资源标签
      declaringResources: 声明资源
      overridingPluginResources: 覆盖插件资源
      optimizingYourResources: 优化资源
      debugging: 调试
      preventingProcessingOfResources: 阻止资源被处理
      otherResourcesPlugins: 其它资源管理插件
    sitemeshContentBlocks: Sitemesh内容块
    makingChangesToADeployedApplication: 修改已经部署的应用
    GSPDebugging: GSP调试
  taglibs:
    title: 标签库
    taglibVariablesAndScopes: 变量与作用域
    simpleTags: 简单标签
    logicalTags: 逻辑标签
    iterativeTags: 迭代标签
    namespaces: 标签命名空间
    usingJSPTagLibraries: 使用JSP标签库
    tagReturnValue: 标签返回值
  urlmappings:
    title: URL映射
    mappingToControllersAndActions: 映射到控制器(Controllers)与操作(Actions)
    restfulMappings: 映射到REST资源
    redirectMappings: 重定向
    embeddedVariables: 嵌入变量
    mappingToViews: 映射到视图(Views)
    mappingToResponseCodes: 映射响应代码(Response Codes)
    mappingHTTP: 映射HTTP方法
    mappingWildcards: 映射通配符
    automaticLinkRewriting: 自动链接重定向
    applyingConstraints: 应用约束
    namedMappings: 命名URL映射
    customizingUrlFormat: 自定义URL格式
    namespacedControllers: 控制器命名空间
  webflow:
    title: Web流程
    startAndEndStates: 开始和结束状态
    actionStatesAndViewStates: 操作状态与视图状态
    flowExecutionEvents: 流程执行事件
    flowScopes: 流程作用域
    dataBindingAndValidation: 数据绑定与校验
    subflowsAndConversations: 子流程与会话
  filters:
    title: 过滤器
    applyingFilters: 应用过滤器
    filterTypes: 过滤器类型
    filterVariablesAndScopes: 变量与作用域
    filterDependencies: 过滤器依赖
  ajax:
    title: Ajax
    ajaxSupport:
      title: Ajax支持
      remotingLinking: 远程链接
      updatingContent: 更新内容
      remoteFormSubmission: 远程表单提交
      ajaxEvents: Ajax事件
    ajaxWithPrototype: 用Prototype实现Ajax
    ajaxWithDojo: 用Dojo实现Ajax
    ajaxWithGWT: 用GWT实现Ajax
    ajaxOnTheServer: 服务端的Ajax
  contentNegotiation: 内容协商
webServices:
  title: Web服务
  REST:
    title: REST
    domainResources: 领域类作为REST资源
    urlMappings: 映射成REST资源
    linkingToResources: 链接到REST资源
    versioningResources: 定义REST资源版本
    restfulControllers:
      title: 实现REST控制器
      extendingRestfulController: 继承REST控制器超类
      restControllersStepByStep: 一步一步实现REST控制器
      generatingRestControllers: 使用scaffolding生成REST控制器
    renderers:
      title: 自定义响应渲染
      defaultRenderers: 自定义默认渲染器
      objectMarshallers: 注册自定义对象转换器
      namedObjectMarshallers: 对对象转换器使用命名配置
      objectMarshallerInterface: 实现对象转换器接口
      customRenderers: 实现自定义渲染器
      gspRenderers: 使用GSP自定义渲染
    hypermedia:
      title: 使用超媒体作为应用状态引擎
      hal: HAL支持
      atom: Atom支持
      vndError: Vnd.Error 支持
    binding: 自定义资源绑定
  SOAP: SOAP
  RSSAndAtom: RSS和Atom
async:
  title: 异步编程
  promises: Promises
  asyncGorm: 异步的GORM
  asyncRequests: 异步的请求处理
  asyncServletApi: Servlet 3.0 异步
validation:
  title: 验证
  constraints: 声明约束
  validatingConstraints: 验证约束
  sharingConstraints: 在类之间共享约束
  validationOnTheClient: 客户端验证
  validationAndInternationalization: 验证与国际化
  validationNonDomainAndCommandObjectClasses: 应用验证到其它类
services:
  title: 服务层
  declarativeTransactions:
    title: 声明式事务
    transactionsRollbackAndTheSession: 事务回滚与会话
  scopedServices: 服务的作用域
  dependencyInjectionServices: 依赖注入与服务
  usingServicesFromJava: 在Java中使用服务
testing:
  title: 测试
  unitTesting:
    title: 单元测试
    unitTestingControllers: 对控制器进行单元测试
    unitTestingTagLibraries: 对标签库进行单元测试
    unitTestingDomains: 对领域模型(Domains)进行单元测试
    unitTestingFilters: 对过滤器进行单元测试
    unitTestingURLMappings: 对URL映射进行单元测试
    mockingCollaborators: 模拟合作交互
    mockingCodecs: 模拟编解码
    unitTestMetaprogramming: 单元测试
  integrationTesting: 交互测试
  functionalTesting: 功能测试
i18n:
  title: 国际化
  understandingMessageBundles: 理解消息资源包
  changingLocales: 修改语言环境
  readingMessages: 读取消息
  scaffoldingAndI18n: 脚手架与国际化
security:
  title: 安全
  securingAgainstAttacks: 针对不同攻击的安全策略
  xssPrevention: 阻止跨域脚本(XSS)攻击
  codecs: 编码与解码对象
  authentication: 权限
  securityPlugins:
    title: 安全插件
    springSecurity: Spring安全
    shiro: Shiro认证
plugins:
  title: 插件
  creatingAndInstallingPlugins: 创建和安装插件
  repositories: 插件仓库
  understandingPluginStructure: 理解插件的结构
  providingBasicArtefacts: 提供基本的Artefacts
  evaluatingConventions: 介绍规约
  hookingIntoBuildEvents: 使用钩子建立事件
  hookingIntoRuntimeConfiguration: 运行时钩子事件
  addingDynamicMethodsAtRuntime: 运行时加入动态方法
  participatingInAutoReloadEvents: 监听自动重新装载事件
  understandingPluginLoadOrder: 理解插件装载顺序
  artefactApi:
    title: Artefact API
    queryingArtefacts: 遍历可用的Artefacts
    customArtefacts: 添加你自己的Artefact类型
  binaryPlugins: 二进制插件
spring:
  title: Grails与 Spring
  theUnderpinningsOfGrails: Grails的支柱
  springdslAdditional: 配置额外的Beans
  springdsl: 使用Beans DSL构建Spring运行环境
  theBeanBuilderDSLExplained: 如何使用BeanBuilder DSL
  propertyPlaceholderConfiguration: 配置属性占位符
  propertyOverrideConfiguration: 配置属性的另外一种方法
hibernate:
  title: Grails 与 Hibernate
  usingHibernateXMLMappingFiles: 使用Hibernate XML映射文件
  mappingWithHibernateAnnotations: 使用Hibernate注解映射
  addingConstraints: 添加约束
scaffolding: 脚手架
deployment: 发布
contributing:
  title: 帮助完善Grails
  issues: 通过JIRA报告问题
  build: 通过源码构建并运行测试
  patchesCore: 提交补丁到核心Grails
  patchesDoc: 提交补丁到Grails文档
