introduction:
  title: 简介
  whatsNew23: Grails 2.3有哪些新功能?
  whatsNew22: Grails 2.2有哪些新功能?
  whatsNew21: Grails 2.1有哪些新功能?
  whatsNew:
    title: Grails 2.0有那些新功能?
    developmentEnvironmentFeatures: 开发环境有关的功能
    coreFeatures: 核心功能
    webFeatures: Web层功能
    persistenceFeatures: 持久层功能
    testingFeatures: 测试功能
gettingStarted:
  title: 入门
  requirements: 安装需求
  downloadingAndInstalling: 下载和安装
  creatingAnApplication: 创建Grails应用程序
  aHelloWorldExample: Hello World示例
  usingInteractiveMode: 使用交互模式
  ide: IDE设置
  conventionOverConfiguration: 约定优于配置
  runningAnApplication: 运行Grails应用程序
  testingAnApplication: 测试Grails应用程序
  deployingAnApplication: 部署Grails应用程序
  supportedJavaEEContainers: Java EE容器支持
  creatingArtefacts: 创建工件
  generatingAnApplication: 生成Grails应用程序
upgradingFromPreviousVersionsOfGrails: 从Grails 2.2升级
conf:
  title: 配置
  config:
    title: 基本配置
    builtInOptions: 内置选项
    logging: 日志
    configGORM: 配置GORM
  environments: 环境
  dataSource:
    title: 数据源
    dataSourcesAndEnvironments: 数据源和环境
    JNDIDataSources: JNDI数据源
    automaticDatabaseMigration: 自动化数据库迁移
    transactionAwareDataSourceProxy: 事务感知的数据源代理
    databaseConsole: 数据库控制台
    multipleDatasources: 多个数据源
  configExternalized: 使用外部配置
  versioning: 版本管理
  docengine: 项目帮助文档管理
  dependencyResolution:
    title: 依赖解析
    configurationsAndDependencies: 依赖解析配置和依赖管理
    dependencyRepositories: 依赖仓库配置
    debuggingResolution: 依赖解析调试
    inheritedDependencies: 依赖继承
    providingDefaultDependencies: 提供缺省依赖
    changingDependencies: 快照和其他不断变化的依赖的管理
    dependencyReports: 依赖报告
    pluginJARDependencies: 插件的JAR依赖
    mavenIntegration: Maven集成
    mavendeploy: 部署至Maven仓库
    pluginDependencies: 插件依赖
    dependencyResolutionCaching: 缓冲依赖解析的结果
commandLine:
  title: 命令行
  interactiveMode: 交互模式
  forkedMode: 分叉模式
  creatingGantScripts: 创建Gant脚本
  reusingGrailsScripts: 重用Grails脚本
  events: 事件接入
  buildCustomising: 构建定制
  antAndMaven: Ant和Maven
  wrapper: Grails封装程序
GORM:
  title: 对象关系映射
  quickStartGuide:
    title: 快速开始指南
    basicCRUD: CRUD基础
  domainClasses:
    title: GORM领域建模
    gormAssociation:
      title: GORM中的关联
      manyToOneAndOneToOne: 多对一和一对一关联
      oneToMany: 一对多关联
      manyToMany: 多对多关联
      basicCollectionTypes: 基本集合类型
    gormComposition: GORM中的对象复合
    inheritanceInGORM: GORM中的继承
    sets,ListsAndMaps: 集合，列表和映射
  persistenceBasics:
    title: 持久化基础
    savingAndUpdating: 保存和更新
    deletingObjects: 删除对象
    cascades: 理解级联更新和级联删除
    fetching: 预加载和延迟加载
    locking: 悲观加锁他乐观加锁
    modificationChecking: 修改检查
  querying:
    title: GORM查询
    finders: 动态查询方法
    whereQueries: Where查询
    criteria: 标准查询
    detachedCriteria: 分离的标准查询 
    hql: Hibernate查询语言(HQL)
  advancedGORMFeatures:
    title: GORM高级特性
    eventsAutoTimestamping: GORM事件和自动时间戳
    ormdsl:
      title: 自定义ORM映射
      tableAndColumnNames: 表名和列名
      caching: 缓冲策略
      inheritanceStrategies: 继承策略
      identity: 自定义数据库标识符
      compositePrimaryKeys: 复合主键
      databaseIndices: 数据库索引
      optimisticLockingAndVersioning: 乐观锁定和对象版本
      fetchingDSL: 预加载和延迟加载
      customCascadeBehaviour: 自定义级联行为
      customHibernateTypes: 自定义Hibernate类型
      derivedProperties: 派生属性
      customNamingStrategy: 自定义命名策略
    defaultSortOrder: 默认排序顺序
  programmaticTransactions: 编程式事务管理
  gormConstraints: GORM和约束
theWebLayer:
  title: Web层
  controllers:
    title: 控制器
    understandingControllersAndActions: 理解控制器和动作
    controllersAndScopes: 控制器和作用域
    modelsAndViews: 模型和视图
    redirectsAndChaining: 重定向和动作链接
    interceptors: 控制器拦截器
    dataBinding: 数据绑定
    xmlAndJSON: XML和JSON响应
    moreOnJSONBuilder: 有关JSONBuilder的更多内容
    uploadingFiles: 文件上传
    commandObjects: 命令对象
    formtokens: 处理重复的表单提交
    typeConverters: 简单类型转换器
    controllerExceptionHandling: 声明式控制器异常处理
  gsp:
    title: Groovy服务器页面
    GSPBasics:
      title: GSP基础
      variablesAndScopes: 变量和作用域
      logicAndIteration: 分支和迭代
      pageDirectives: 页面指令
      expressions: 表达式
    tags:
      title: GSP标签
      tagVariablesAndScopes: 变量和作用域
      tagLogicAndIteration: 分支和迭代
      searchAndFiltering: 搜索和过滤
      linksAndResources: 链接和资源
      formsAndFields: 表单他字段
      tagsAsMethodCalls: 标签的方法调用
    viewsAndTemplates: 视图和模板
    layouts: 使用Sitemesh布局
    resources:
      title: 静态资源
      includingResourcesUsingTheResourceTags: 使用resource标签包含资源
      otherResourceTags: 其他的资源相关的标签
      declaringResources: 声明资源
      overridingPluginResources: 覆盖插件中的资源
      optimizingYourResources: 资源优化
      debugging: 调试
      preventingProcessingOfResources: 阻止资源处理
      otherResourcesPlugins: 其他资源感知的插件
    sitemeshContentBlocks: Sitemesh内容块
    makingChangesToADeployedApplication: 修改已经部署的应用 
    GSPDebugging: GSP调试
  taglibs:
    title: 标签库
    taglibVariablesAndScopes: 变量他作用域
    simpleTags: 简单标签
    logicalTags: 逻辑标签
    iterativeTags: 迭代标签
    namespaces: 标签名字空间
    usingJSPTagLibraries: 使用JSP标签库
    tagReturnValue: 标签返回值
  urlmappings:
    title: URL映射
    mappingToControllersAndActions: 映射到控制器和动作
    restfulMappings: 映射到REST资源
    redirectMappings: URL映射中的重定向
    embeddedVariables: 嵌入变量
    mappingToViews: 映射到视图
    mappingToResponseCodes: 映射到响应码
    mappingHTTP: 映射到HTTP方法
    mappingWildcards: 映射通配符
    automaticLinkRewriting: 自动链接重写
    applyingConstraints: 应用约束
    namedMappings: 命名URL映射
    customizingUrlFormat: 自定义URL格式
    namespacedControllers: 名字空间中的控制器
  webflow:
    title: Web Flow
    startAndEndStates: 开始状态和结束状态
    actionStatesAndViewStates: 动作状态和视图状态
    flowExecutionEvents: Flow执行事件
    flowScopes: Flow作用域
    dataBindingAndValidation: 数据绑定和数据验证
    subflowsAndConversations: 子Flow和会话
  filters:
    title: 过滤器
    applyingFilters: 应用过滤器
    filterTypes: 过滤器类型
    filterVariablesAndScopes: 变量和作用域
    filterDependencies: 过滤器依赖
  ajax:
    title: Ajax
    ajaxSupport:
      title: Ajax支持
      remotingLinking: 异步链接
      updatingContent: 更新内容
      remoteFormSubmission: 异步表单提交
      ajaxEvents: Ajax事件
    ajaxWithPrototype: 使用Prototype实现Ajax
    ajaxWithDojo: 使用Dojo实现Ajax
    ajaxWithGWT: 使用GWT实现Ajax
    ajaxOnTheServer: 服务器端的Ajax
  contentNegotiation: 内容协商
webServices:
  title: Web服务
  REST: 
    title: REST
    domainResources: 领域类作为REST资源
    urlMappings: 映射到REST资源
    linkingToResources: 链接到REST资源
    versioningResources: REST资源版本管理
    restfulControllers:
      title: 实现REST控制器
      extendingRestfulController: 扩展RestfulController父类
      restControllersStepByStep: 一步一步实现REST控制器
      generatingRestControllers: 使用脚手架生成REST控制器
    renderers: 
      title: 自定义响应表示
      defaultRenderers: 定制缺省表示器（Renderer）
      objectMarshallers: 注册定制对象调度器
      namedObjectMarshallers: 为对象调度器使用命名配置
      objectMarshallerInterface: 实现ObjectMarshaller接口
      customRenderers: 实现一个自定义的表示器
      gspRenderers: 使用GSP定制表示
    hypermedia: 
      title: 使用超媒体作为应用状态的引擎
      hal: HAL支持
      atom: Atom支持
      vndError: Vnd.Error支持
    binding: 定制资源绑定
  SOAP: SOAP
  RSSAndAtom: RSS和Atom
async:
  title: 异步编程
  promises: 承诺
  asyncGorm: 异步GORM
  asyncRequests: 异步请求处理
  asyncServletApi: Servlet 3.0 Async支持
validation:
  title: 验证
  constraints: 声明约束
  validatingConstraints: 验证约束
  sharingConstraints: 在多个类中共享约束
  validationOnTheClient: 客户端验证
  validationAndInternationalization: 验证与国际化
  validationNonDomainAndCommandObjectClasses: 对其他类应用验证
services:
  title: 服务层
  declarativeTransactions:
    title: 声明式事务
    transactionsRollbackAndTheSession: 事务回滚与Session
  scopedServices: 服务的作用域
  dependencyInjectionServices: 依赖注入与服务
  usingServicesFromJava: 从Java中使用服务
testing:
  title: 测试
  unitTesting:
    title: 单元测试
    unitTestingControllers: 控制器单元测试
    unitTestingTagLibraries: 标签库单元测试
    unitTestingDomains: 领域类单元测试
    unitTestingFilters: 过滤器单元测试
    unitTestingURLMappings: URL映射单元测试
    mockingCollaborators: 模拟协作对象
    mockingCodecs: 模拟Codecs
  integrationTesting: 集成测试
  functionalTesting: 功能测试
i18n:
  title: 国际化
  understandingMessageBundles: 理解消息绑定文件
  changingLocales: 更改地区
  readingMessages: 获取消息
  scaffoldingAndI18n: 脚手架和国际化
security:
  title: 安全
  securingAgainstAttacks: 防御攻击
  xssPrevention: 阻止跨站脚本（XSS）
  codecs: 对象编码和解码
  authentication: 认证
  securityPlugins:
    title: 安全插件
    springSecurity: Spring Security
    shiro: Shiro
plugins:
  title: 插件
  creatingAndInstallingPlugins: 创建和安装插件
  repositories: 插件仓库
  understandingPluginStructure: 了解插件的组织结构
  providingBasicArtefacts: 提供基本的工件
  evaluatingConventions: 获取约定
  hookingIntoBuildEvents: 接入构建事件
  hookingIntoRuntimeConfiguration: 接入运行时配置
  addingDynamicMethodsAtRuntime: 在运行时添加动态方法
  participatingInAutoReloadEvents: 参与自动重载事件
  understandingPluginLoadOrder: 了解插件加载的顺序
  artefactApi:
    title: Artefact编程接口
    queryingArtefacts: 查询可用的工件
    customArtefacts: 添加自定义的工件类型
  binaryPlugins: 二进制插件
spring:
  title: Grails与Spring
  theUnderpinningsOfGrails: Grails的支柱
  springdslAdditional: 配置其他的Bean
  springdsl: 在运行时使用Bean DSL配置Spring
  theBeanBuilderDSLExplained: BeanBuilder DSL详解
  propertyPlaceholderConfiguration: 属性占位符配置
  propertyOverrideConfiguration: 覆盖属性配置
hibernate:
  title: Grails与Hibernate
  usingHibernateXMLMappingFiles: 使用Hibernate XML映射文件
  mappingWithHibernateAnnotations: 使用Hibernate注解进行映射
  addingConstraints: 添加约束
scaffolding: 脚手架
deployment: 部署
contributing: 
  title: 为Grails做贡献
  issues: 在JIRA中报告问题
  build: 从源代码构建和运行测试
  patchesCore: 向Grails内核提交补丁
  patchesDoc: 向Grails文档提交补丁
