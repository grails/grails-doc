{hidden}
You can still use GORM validation even if you use a Java domain model. Grails lets you define constraints through separate scripts in the @src/java@ directory. The script must be in a directory that matches the package of the corresponding domain class and its name must have a _Constraints_ suffix. For example, if you had a domain class @org.example.Book@, then you would create the script @src/java/org/example/BookConstraints.groovy@\.

Add a standard GORM @constraints@ block to the script:
{code}
constraints = {
    title blank: false
    author blank: false
}
{code}

Once this is in place you can validate instances of your domain class!

{hidden}
如果你使用Java领域模型你仍然可以使用GORM验证功能。Grails允许你通过@src/java@目录中的独立脚本定义约束。该脚本必须位于对应领域类所在的包的目录中并且其名字必须以 _Constraints_ 为后缀。例如，如果你有一个领域类@org.example.Book@，那么你将需要创建@src/java/org/example/BookConstraints.groovy@脚本。

添加标准的GORM @constraints@代码块到这个脚本里面：
{code}
constraints = {
    title blank: false
    author blank: false
}
{code}

这些就绪以后你就可以验证领域类的实例了！
