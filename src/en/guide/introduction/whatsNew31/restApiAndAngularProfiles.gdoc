h4. REST Profile

A new profile is available designed for the creation of pure REST applications without a UI.

To create a REST application use the @rest-api@ profile as an argument to [create-app|commandLine]:

{code}
$ grails create-app myapp --profile=rest-api
{code}

Then start interactive mode to see the available commands for the profile:

{code}
$ cd myapp
$ grails
{code}

If you hit TAB you will notice code generation commands specific to the profile including:

* @create-domain-resource@ - Creates a domain class annotated with the [Resource|api:grails.rest.Resource] annotation) 
* @create-restful-controller@ - Creates a controller that extends [RestfulController|api:grails.rest.RestfulController].

h4. JSON and Markup Views

The REST profile includes the ability to define [JSON and Markup views|https://github.com/grails/grails-views] and the @build.gradle@ features the ability to compile these views for production use.

The REST profile also creates [JSON views|https://github.com/grails/grails-views] to render the @index@ action and common commands such as [generate-views|commandLine] have been overridden to generate JSON views.

h4. AngularJS Profile

An initial version of the AngularJS profile is now available, making it easier to create and integrate AngularJS with Grails 3 applications.

To create a Grails 3 AngularJS application use the @angular@ profile as an argument to [create-app|commandLine]:

{code}
$ grails create-app myapp --profile=angular
{code}

Then start interactive mode to see the available commands for the profile:

{code}
$ cd myapp
$ grails
{code}


You will notice new commands such as @create-ng-component@, @create-ng-controller@ etc. that help you get going creating an AngularJS application.

The @build.gradle@ is also preconfigured with the necessary Gradle plugins to integrate AngularJS with Asset Pipeline. The created Angular application can be found in @grails-app/assets/javascripts@.

