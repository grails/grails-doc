h4. Profile Publishing and Repositories

The following improvements are available in Grails profiles:

* Profiles are now published as regular JAR files to any Maven compatible repository (Artifactory, Nexus etc.).
* Additional profiles can be created easiy with the new [create-profile|commandLine] command.
* Profiles can now contribute to the generation of the build
* Profiles can now have one or many features

For more information see the new [section on Profiles|guide:profiles] in the user guide.

h4. REST Profile

A new profile is available designed for the creation of pure REST applications without a UI.

To create a REST application use the @web-api@ profile as an argument to [create-app|commandLine]:

{code}
$ grails create-app myapp --profile=web-api
{code}

Then start interactive mode to see the available commands for the profile:

{code}
$ cd myapp
$ grails
{code}

If you hit TAB you will notice code generation commands specific to the profile including:

* @create-domain-resource@ - Creates a domain class annotated with the [Resource|api:grails.rest.Resource] annotation) 
* @create-restful-controller@ - Creates a controller that extends [RestfulController|api:grails.rest.RestfulController].

h4. JSON and Markup Views

The REST profile includes the ability to define [JSON and Markup views|https://github.com/grails/grails-views] and the @build.gradle@ features the ability to compile these views for production use.

The REST profile also creates [JSON views|https://github.com/grails/grails-views] to render the @index@ action and common commands such as [generate-views|commandLine] have been overridden to generate JSON views.