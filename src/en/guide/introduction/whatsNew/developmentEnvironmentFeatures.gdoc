h4. New Shell and Code Generation API

Replacing Gant, Grails 3.0 features a new interactive command line shell that integrates closely with Gradle and provides APIs for writing scripts that interact with Gradle and perform code generation.

The new shell integrates closely with the concept of application profiles with each profile capable defining [profile specific commands|https://github.com/grails/grails-profile-repository/tree/master/profiles/web/commands]. As with previous versions of Grails, plugins can define new shell commands that can invoke Gradle or perform code generation and project automation tasks.

See the new guide on [Creating Custom Scripts|guide:creatingCustomScripts] for more information.

h4. Enhanced IDE Integration

Since Grails 3.0 is built on Gradle, you can now import a Grails project using IntelliJ community edition or GGTS's Gradle tooling support without the need for Grails specific tooling. Grails 3.0 plugins are published as simple JAR files greatly reducing the need for additional IDE support specific to Grails.

h4. Application Main Class

Each new Grails 3.0 project features an @Application@ class that has a traditional @static void main@ signature, meaning to run or debug a Grails 3.0 application from an IDE like IntelliJ or GGTS you can simply right-click on the @Application@ class and execute to start your Grails application. All Grails 3.0 tests can also just be run from the IDE directly without needing to resort to the command line (even integration / functional tests!).
