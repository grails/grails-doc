[Version 1.1|http://views.grails.org/1.1.x] of the JSON Views plugin is included with Grails 3.2's "rest-api" profile and includes [a number of new features|http://views.grails.org/1.1.x/#_version_history]. Below are some of the highlights:

h4. Template Inheritance

It is now possible for a child JSON template to specify a parent template, thus allowing better template composition. For example given the following parent:

{code}
// grails-app/views/_parent.gson
model {
    Object object
}
json {
    hal.links(object)
    version "1.0"
}
{code}

A child template can be specified as follows:

{code}
inherits template:"parent"
model {
    Person person
}
json {
    name person.name
}
{code}

h4. Global and Default Templates

Global templates can now be created for any GORM custom types. This allows adding support for external libraries such as JodaTime or custom types provided by datastores such as MongoDB (example GeoJSON).

A global template is simply another JSON template that is named after the class name. See for example [the GeoJSON templates|https://github.com/grails/grails-views/tree/master/json-templates/src/templates/grails/mongodb/geo].

In addition it is now possible to provide a fallback template named @/object/_object.gson@ that is used if no other template is found.

h4. Better HAL Support

The HAL support has been expanded and now includes greater control over @_embedded@ and @_links@, for example:

{code}
model {
    Book book
}
json {
    hal.links(self: book )
    hal.embedded(authors: book.authors)
    hal.inline(book) {
        pages 300
    }
}
{code}

The HAL support has also been improved with support for HAL pagination.


