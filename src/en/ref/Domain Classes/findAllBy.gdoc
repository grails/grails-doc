h1. findAllBy*

h2. Purpose

Dynamic method that uses the properties of the domain class to create query method expressions that return all matching instances of the domain class

h2. Examples

Given this domain class:

{code:java}
class Book {
    String title
    Date releaseDate
    String author
    Boolean paperback
}
{code}

The following are all possible:

{code:java}
def results = Book.findAllByTitle("The Shining",
                  [max: 10, sort: "title", order: "desc", offset: 100])

results = Book.findAllByTitleAndAuthor("The Sum of All Fears", "Tom Clancy")

results = Book.findAllByReleaseDateBetween(firstDate, new Date())

results = Book.findAllByReleaseDateGreaterThanEquals(firstDate)

results = Book.findAllByTitleLike("%Hobbit%")

results = Book.findAllByTitleIlike("%Hobbit%") // ignore case

results = Book.findAllByTitleNotEqual("Harry Potter")

results = Book.findAllByReleaseDateIsNull()

results = Book.findAllByReleaseDateIsNotNull()

results = Book.findAllPaperbackByAuthor("Douglas Adams")

results = Book.findAllNotPaperbackByAuthor("Douglas Adams")

results = Book.findAllByAuthorInList(["Douglas Adams", "Hunter S. Thompson"])
{code}

h2. Description

GORM supports the notion of [Dynamic Finders|http://gorm.grails.org/6.0.x/hibernate/manual/index.html#finders]. The @findAllBy*@ method finds all the results for the given method expression.

Parameters:

* @metaParams@ - A @M@ap containing pagination parameters @max@, @order@, @offset@ and @sort@ and metaParameters @readOnly@, @timeout@, @fetchSize@, and @flushMode@

Pagination and sorting parameters can be used as the last argument to a dynamic method:

{code:java}
def results = Book.findAllByTitle("The Shining",
                 [max: 10, sort: "title", order: "desc", offset: 100])
{code}

The following operator names can be used within the respective dynamic methods:

* @LessThan@
* @LessThanEquals@
* @GreaterThan@
* @GreaterThanEquals@
* @Between@
* @Like@
* @Ilike@ (i.e. ignorecase like)
* @IsNotNull@
* @IsNull@
* @Not@
* @NotEqual@
* @And@
* @Or@
* @InList@

These operator names can be considered keywords, and you will run into problems when querying domain classes that have one of these names as property names. For more information on [dynamic finders|http://gorm.grails.org/6.0.x/hibernate/manual/index.html#finders] refer to the user guide.
