h1. Database Mapping Usage

Domain classes in Grails by default dictate the way they are mapped to the database using sensible defaults. You can customize these with the ORM Mapping DSL. For example create a @Book@ domain:

{code:java}
grails create-domain-class org.bookstore.Book
{code}

And then you can use the @mapping@ block to customize the ORM mapping behavior.

{code:java}
package org.bookstore

class Book {
    String title
    Date releaseDate
    Author author

    static mapping = {
        table "books"
        author column: "auth_id"
    }
}
{code}

Refer to the user guide section on [ORM Mapping|guide:ormdsl] for more information.

h1. Global Database Mapping

You can configure mappings globally in @grails-app/conf/application.groovy@ as follows:

{code}
grails.gorm.default.mapping = {
    cache true
    id generator: 'sequence'
    'user-type'(type: org.hibernate.type.YesNoType, class: Boolean)
}
{code}
